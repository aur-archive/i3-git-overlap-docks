diff --git a/include/data.h b/include/data.h
index f4f6f97..0810f67 100644
--- a/include/data.h
+++ b/include/data.h
@@ -382,6 +382,7 @@ struct Client {
         /** Height which was determined by reading the _NET_WM_STRUT_PARTIAL
          * top/bottom of the screen reservation */
         int desired_height;
+        int desired_width;
 
         /** Name (= window title) */
         char *name;
diff --git a/src/layout.c b/src/layout.c
index c8a21bf..d168e64 100644
--- a/src/layout.c
+++ b/src/layout.c
@@ -578,18 +578,18 @@ static void render_bars(xcb_connection_t *conn, Workspace *r_ws, int width, int
         SLIST_FOREACH(client, &(r_ws->output->dock_clients), dock_clients) {
                 DLOG("client is at %d, should be at %d\n", client->rect.y, *height);
                 if (client->force_reconfigure |
-                    update_if_necessary(&(client->rect.x), r_ws->rect.x) |
+                    update_if_necessary(&(client->rect.x), r_ws->rect.x + width - client->desired_width) |
                     update_if_necessary(&(client->rect.y), *height))
                         reposition_client(conn, client);
 
                 if (client->force_reconfigure |
-                    update_if_necessary(&(client->rect.width), width) |
+                    update_if_necessary(&(client->rect.width), client->desired_width) |
                     update_if_necessary(&(client->rect.height), client->desired_height))
                         resize_client(conn, client);
 
                 client->force_reconfigure = false;
                 DLOG("desired_height = %d\n", client->desired_height);
-                *height += client->desired_height;
+                //*height += client->desired_height;
         }
 }
 
@@ -684,8 +684,10 @@ void render_workspace(xcb_connection_t *conn, Output *output, Workspace *r_ws) {
 
         /* Reserve space for dock clients */
         Client *client;
+        /*
         SLIST_FOREACH(client, &(output->dock_clients), dock_clients)
                 height -= client->desired_height;
+        */
 
         /* Space for the internal bar */
         if (!config.disable_workspace_bar)
diff --git a/src/manage.c b/src/manage.c
index 691cc1d..0d6eaef 100644
--- a/src/manage.c
+++ b/src/manage.c
@@ -159,6 +159,7 @@ void reparent_window(xcb_connection_t *conn, xcb_window_t child,
         uint32_t mask = 0;
         uint32_t values[3];
         uint16_t original_height = height;
+        uint16_t original_width = width;
         bool map_frame = true;
 
         /* We are interested in property changes */
@@ -326,6 +327,13 @@ void reparent_window(xcb_connection_t *conn, xcb_window_t child,
                                 new->desired_height = original_height;
                         }
                         DLOG("the client wants to be %d pixels high\n", new->desired_height);
+
+                        new->desired_width = strut[1];
+                        if (new->desired_width == 0) {
+                                DLOG("Client wanted to be 0 pixels wide, using the window's width (%d)\n", original_width);
+                                new->desired_width = original_width;
+                        }
+                        DLOG("the client wants to be %d pixels wide\n", new->desired_width);
                 } else {
                         DLOG("The client didn't specify space to reserve at the screen edge, using its height (%d)\n", original_height);
                         new->desired_height = original_height;
diff --git a/src/workspace.c b/src/workspace.c
index 7406bd5..bad4228 100644
--- a/src/workspace.c
+++ b/src/workspace.c
@@ -464,9 +464,11 @@ int workspace_height(Workspace *ws) {
         i3Font *font = load_font(global_conn, config.font);
 
         /* Reserve space for dock clients */
+        /*
         Client *client;
         SLIST_FOREACH(client, &(ws->output->dock_clients), dock_clients)
                 height -= client->desired_height;
+        */
 
         /* Space for the internal bar */
         if (!config.disable_workspace_bar)
